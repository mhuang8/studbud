{"mappings":"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","sources":["public/script.js"],"sourcesContent":["///TASK MANAGEMENT TOOLS - Tasklist & Kanban Board (AND BACKUP NON-MODULE NAV)\n\n//Variables for HTML elements using DOM selection:\n//nav----\nhamburgerMenu = document.getElementById(\"hamburgerMenu\");\nverticalNav = document.getElementById(\"vertical-nav\");\n//tasklist----\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\");\nvar taskInput = document.getElementById(\"taskInput\");\nvar dueDateInput = document.getElementById(\"dueDateInput\");\nvar completionTimeInput = document.getElementById(\"completionTimeInput\");\nvar estimatedTimeInput = document.getElementById(\"estimatedTimeInput\");\nvar priorityInput = document.getElementById(\"priorityInput\");\nvar tasklist = document.getElementById(\"tasklistTable\");\n//kanban----\nvar boardContainer = document.getElementById(\"board-container\");\nvar toDoColumn = document.getElementById(\"toDoColumn\");\nvar boardNameInput = document.getElementById(\"boardNameInput\");\nconst kanbanCard = document.querySelector(\"#kanbanCard\");\nconst boardColumns = document.querySelectorAll(\".boardColumn\");\nvar kanbanPriority = document.getElementsByClassName(\"kanbanPriority\");\nvar boardBarDecoration = document.querySelectorAll(\".boardBarDecoration\");\nconst kanbanForm = document.getElementById(\"kanbanForm\");\n\n///NAVIGATION ---------------------------------------------------\n//-----Uncomment this section if running through Live Server (not through Node server/npm run start)----//\n/*class Navigation {\n  constructor(links, pages) {\n    this.links = links;\n    this.pages = pages;\n    this.currentPage = null;\n  }\n\n  getLinks() {\n    console.log(this.links);\n  }\n\n  setPage(pageId) {\n    this.currentPage = pageId;\n    //console.log(this.currentPage);\n    //change the page within the html\n    this.links.forEach((link) => {\n      link.classList.remove(\"active\");\n      if (this.getHash(link) === pageId) {\n        link.classList.add(\"active\");\n      }\n    });\n    this.pages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n    document.getElementById(pageId).style.display = \"block\";\n  }\n\n  getHash(link) {\n    return link.href.split(\"#\")[1];\n  }\n}*/\n//---------------------------------\n\n//----Comment out this line if running through VSCode Live Server (not through Node server/npm run start)----//\nimport Navigation from './components/navigation';\n\nconst links = document.querySelectorAll(\".main-nav > ul > li > a\");\nconst pages = document.querySelectorAll(\".page-container\");\n\nvar nav = new Navigation(links, pages);\nnav.getLinks();\n\nnav.links.forEach(function (link) {\n  link.addEventListener(\"click\", function () {\n    //console.log(nav.getHash(link));\n    let pageId = nav.getHash(link);\n    nav.setPage(pageId);\n  });\n});\n\n//NAV collapse(open & close nav)-------\nfunction openNav() {\n  document.getElementById(\"vertical-nav\").style.width = \"11.25rem\";\n  document.getElementById(\"main\").style.marginLeft = \"11.25rem\";\n\n  verticalNav.classList.add(\"open\");\n  hamburgerMenu.querySelector(\"i.fa\").classList.remove(\"fa-bars\");\n  hamburgerMenu.querySelector(\"i.fa\").classList.add(\"fa-times\");\n}\n\nfunction closeNav() {\n  document.getElementById(\"vertical-nav\").style.width = \"0\";\n  document.getElementById(\"main\").style.marginLeft = \"0\";\n\n  verticalNav.classList.remove(\"open\");\n  hamburgerMenu.querySelector(\"i.fa\").classList.remove(\"fa-times\");\n  hamburgerMenu.querySelector(\"i.fa\").classList.add(\"fa-bars\");\n}\n\nhamburgerMenu.addEventListener(\"click\", () => {\n  var isOpen = verticalNav.classList.contains(\"open\");\n\n  if (isOpen) {\n    closeNav();\n  } else {\n    openNav();\n  }\n});\n\n//RESOURCE LIST SUB NAV-----------\nconst subLinks = document.querySelectorAll(\".resource-nav > ul > li > a\");\nconst subPages = document.querySelectorAll(\".sub-page-container\");\n\nvar resourceNav = new Navigation(subLinks, subPages);\n\nresourceNav.links.forEach((link) => {\n  link.addEventListener(\"click\", function () {\n    let pageId = resourceNav.getHash(link);\n    resourceNav.setPage(pageId);\n  });\n});\n\n///TASK LIST -------------------------------------------------------\n//event listener for when form submitted/button clicked\n//OR button.addEventListener(\"click\", function(event) {\nform.addEventListener(\"submit\", function (event) {\n  //make sure none of the browser function will happen automatically\n  event.preventDefault();\n  //takes the user input\n  let task = taskInput.value;\n  let dueDate = dueDateInput.value;\n  let completionTime = completionTimeInput.value;\n  let estimatedTime = estimatedTimeInput.value;\n  let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\n  //add it as a task using addTask function\n  addTask(task, dueDate, completionTime, estimatedTime, priorityRating, false);\n  //console out for debugging\n  console.log(taskListArray);\n});\n\n//empty array to store tasks\nvar taskListArray = [];\n\n//The function creates the object & pushes it to an array\nfunction addTask(\n  taskDescription,\n  dueDate,\n  completionTime,\n  estimatedTime,\n  priorityRating,\n  completionStatus\n) {\n  let d = new Date();\n  let dateCreated = d.getFullYear();\n  let task = {\n    taskDescription,\n    dueDate,\n    dateCreated,\n    completionTime,\n    estimatedTime,\n    priorityRating,\n    completionStatus,\n  };\n\n  //add the task to the array\n  taskListArray.push(task);\n  ///return task for task list;\n  renderTask(task);\n  //calling function for kanban board\n  renderKanban(task);\n}\n\n//ADD the task to the screen via HTML\n//pulling the task as a complete object rather than individual parts\nfunction renderTask(task) {\n  //create html elements in table format for alignment\n  let item = document.createElement(\"tr\");\n  item.setAttribute(\"class\", \"newTaskItem\");\n\n  let cell1 = document.createElement(\"td\");\n  cell1.innerHTML +=\n    \"<label for=taskCheckbox>\" +\n    \"<input type=checkbox name=taskCheckbox class=taskCheckboxInput>\" +\n    \"<strong>\" +\n    task.taskDescription +\n    \"</strong>\" +\n    \"</label>\";\n\n  let cell2 = document.createElement(\"td\");\n  cell2.innerHTML += \"<p>\" + task.dueDate + \"</p>\";\n\n  let cell3 = document.createElement(\"td\");\n  cell3.innerHTML += \"<p>\" + task.completionTime + \"</p>\";\n\n  let cell4 = document.createElement(\"td\");\n  cell4.innerHTML += \"<p>\" + task.estimatedTime + \" \" + \"min\" + \"</p>\";\n\n  let cell5 = document.createElement(\"td\");\n  cell5.innerHTML += \"<p>\" + task.priorityRating + \"</p>\";\n\n  let cell6 = document.createElement(\"td\");\n\n  item.append(cell1, cell2, cell3, cell4, cell5, cell6);\n\n  tasklistTable.appendChild(item);\n\n  //Extra task DOM elements - further user interaction e.g delete\n  let delButton = document.createElement(\"button\");\n  delButton.setAttribute(\"class\", \"taskDelBtn\");\n  //create a textNode\n  delButton.innerHTML = \"<i class='fas fa-trash'>\" + \"</i>\";\n  //get the text appended to button element\n\n  //append whole button to the item created\n  cell6.appendChild(delButton);\n\n  //Event Listeners for DOM elements\n  delButton.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    item.remove();\n  });\n  //Clear the input form\n  form.reset();\n\n  //Setting the style colours depending on priority rating\n  var newTaskItem = document.getElementsByClassName(\"newTaskItem\");\n  var taskCheckboxInput = document.getElementsByClassName(\"taskCheckboxInput\");\n\n  //ITERATION: changed the colours to correlate more appropriately with the priority (pink = high, blue = low, yellow = medium)\n  if (task.priorityRating === \"Low\") {\n    newTaskItem[newTaskItem.length - 1].style.backgroundColor = \"#E2EDF7\";\n    taskCheckboxInput[taskCheckboxInput.length - 1].style.border =\n      \"solid #8CB7F2\";\n    //taskCheckboxInput.addEventListener(\"click\", function(event){\n    //askCheckboxInput.style.backgroundColor = \"solid #F7D7E7\";\n  } else if (task.priorityRating === \"Medium\") {\n    newTaskItem[newTaskItem.length - 1].style.backgroundColor = \"#FCF4DD\";\n    taskCheckboxInput[taskCheckboxInput.length - 1].style.border =\n      \"solid #F7D382\";\n  } else if (task.priorityRating === \"High\") {\n    newTaskItem[newTaskItem.length - 1].style.backgroundColor = \"#F7D7E7\";\n    taskCheckboxInput[taskCheckboxInput.length - 1].style.border =\n      \"solid #EAA0D3\";\n  }\n}\n\n///KANBAN BOARD ---------------------------------------------------------\n\n//render kanban board\nfunction renderKanbanBoard(boardName) {\n  let board = document.createElement(\"div\");\n  board.setAttribute(\"class\", \"boardColumn\");\n  board.innerHTML += \"<div class='boardBarDecoration'>\" + \"</div>\";\n  board.innerHTML += \"<h4 contenteditable='true'>\" + boardName + \"</h4>\";\n\n  //append the board to the container\n  boardContainer.appendChild(board);\n\n  //listeners for added boards\n  board.addEventListener(\"dragover\", function (event) {\n    event.preventDefault();\n  });\n\n  board.addEventListener(\"dragenter\", function (event) {\n    event.preventDefault();\n  });\n\n  board.addEventListener(\"drop\", function (event) {\n    this.append(draggedItem);\n  });\n}\n\n//render kanban card\nfunction renderKanban(task) {\n  let card = document.createElement(\"div\");\n  card.setAttribute(\"id\", \"kanbanCard\");\n  card.setAttribute(\"draggable\", \"true\");\n\n  card.innerHTML =\n    \"<div class = kanbanPriority>\" +\n    \"<p>\" +\n    task.priorityRating +\n    \"</p>\" +\n    \"<div>\";\n  card.innerHTML += \"<h5>\" + task.taskDescription + \"</h5>\";\n  card.innerHTML +=\n    \"<p>\" +\n    \"<i class='far fa-calendar-check'>\" +\n    \"</i>\" +\n    \" \" +\n    task.dueDate +\n    \" \" +\n    \"(\" +\n    task.completionTime +\n    \")\" +\n    \"</p>\";\n  card.innerHTML += \"<p>\" + task.estimatedTime + \" \" + \"min\" + \"</p>\";\n  //append the card to the To-Do Board\n  toDoColumn.appendChild(card);\n\n  //setting colour of priority div depending on priority rating\n  if (task.priorityRating === \"Low\") {\n    kanbanPriority[kanbanPriority.length - 1].style.backgroundColor = \"#5598F5\";\n  } else if (task.priorityRating === \"Medium\") {\n    kanbanPriority[kanbanPriority.length - 1].style.backgroundColor = \"#F8BF53\";\n  } else if (task.priorityRating === \"High\") {\n    kanbanPriority[kanbanPriority.length - 1].style.backgroundColor = \"#EB68A9\";\n  }\n  //console.log(kanbanPriority);\n}\n\n//add a new board with user inputted board name when user submits the form\nkanbanForm.addEventListener(\"submit\", function (event) {\n  let boardName = boardNameInput.value;\n  event.preventDefault();\n  renderKanbanBoard(boardName);\n});\n\n//DRAG AND DROP functionality\nlet draggedItem = null;\n\n/*for (let i = 0; i < cardArray.length; i++){\nconst cardItem = cardArray[i];*/\n\n//makes the card in original board invisible when start drag\ndocument.body.addEventListener(\"dragstart\", function (event) {\n  if (event.target.id == \"kanbanCard\") {\n    draggedItem = event.target;\n    console.log(\"dragstart\");\n    setTimeout(function () {\n      event.target.style.display = \"none\";\n    }, 0);\n  }\n});\n\ndocument.body.addEventListener(\"dragend\", function (event) {\n  if (event.target.id == \"kanbanCard\") {\n    console.log(\"dragend\");\n    setTimeout(function () {\n      event.target.style.display = \"block\";\n      draggedItem = null;\n    }, 0);\n  }\n});\n\nfor (let j = 0; j < boardColumns.length; j++) {\n  const boardColumn = boardColumns[j];\n\n  boardColumn.addEventListener(\"dragover\", function (event) {\n    event.preventDefault();\n    //console.log(\"dragover\");\n  });\n\n  boardColumn.addEventListener(\"dragenter\", function (event) {\n    event.preventDefault();\n    //console.log(\"dragenter\");\n  });\n\n  //append the card to board when dropped\n  boardColumn.addEventListener(\"drop\", function (event) {\n    //console.log(\"drop\");\n    this.append(draggedItem);\n  });\n}\n"],"names":["hamburgerMenu","document","getElementById","verticalNav","$aba770e9ce7dbb561d9a46041b248abf$var$form","querySelector","$aba770e9ce7dbb561d9a46041b248abf$var$taskInput","$aba770e9ce7dbb561d9a46041b248abf$var$dueDateInput","$aba770e9ce7dbb561d9a46041b248abf$var$completionTimeInput","$aba770e9ce7dbb561d9a46041b248abf$var$estimatedTimeInput","$aba770e9ce7dbb561d9a46041b248abf$var$priorityInput","$aba770e9ce7dbb561d9a46041b248abf$var$boardContainer","$aba770e9ce7dbb561d9a46041b248abf$var$toDoColumn","$aba770e9ce7dbb561d9a46041b248abf$var$boardNameInput","$aba770e9ce7dbb561d9a46041b248abf$var$boardColumns","querySelectorAll","$aba770e9ce7dbb561d9a46041b248abf$var$kanbanPriority","getElementsByClassName","$aba770e9ce7dbb561d9a46041b248abf$var$kanbanForm","$aba770e9ce7dbb561d9a46041b248abf$var$links","$aba770e9ce7dbb561d9a46041b248abf$var$pages","$aba770e9ce7dbb561d9a46041b248abf$var$nav","$parcel$interopDefault","$a800c35920c7f688f9a6a8903974e2f9$exports","getLinks","links","forEach","link","addEventListener","pageId","getHash","setPage","classList","contains","style","width","marginLeft","remove","add","$aba770e9ce7dbb561d9a46041b248abf$var$subLinks","$aba770e9ce7dbb561d9a46041b248abf$var$subPages","$aba770e9ce7dbb561d9a46041b248abf$var$resourceNav","event","preventDefault","taskDescription","dueDate","completionTime","estimatedTime","priorityRating","completionStatus","dateCreated","Date","getFullYear","task","$aba770e9ce7dbb561d9a46041b248abf$var$taskListArray","push","item","createElement","setAttribute","cell1","innerHTML","cell2","cell3","cell4","cell5","cell6","append","tasklistTable","appendChild","delButton","reset","newTaskItem","taskCheckboxInput","length","backgroundColor","border","$aba770e9ce7dbb561d9a46041b248abf$var$renderTask","card","$aba770e9ce7dbb561d9a46041b248abf$var$renderKanban","$aba770e9ce7dbb561d9a46041b248abf$var$addTask","value","options","selectedIndex","console","log","boardName","board","$aba770e9ce7dbb561d9a46041b248abf$var$draggedItem","$aba770e9ce7dbb561d9a46041b248abf$var$renderKanbanBoard","body","target","id","setTimeout","display","j","boardColumn"],"version":3,"file":"index.HASH_REF_f12f294504766d489aa5c3d9684d6f31.js.map"}