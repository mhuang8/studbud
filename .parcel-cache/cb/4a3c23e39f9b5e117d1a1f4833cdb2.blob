import   "aba770e9ce7dbb561d9a46041b248abf:./components/navigation";
//Variables for HTML elements using DOM selection
//tasklist
const $aba770e9ce7dbb561d9a46041b248abf$var$form = document.getElementById("taskform");
const $aba770e9ce7dbb561d9a46041b248abf$var$button = document.querySelector("#taskform > button");
var $aba770e9ce7dbb561d9a46041b248abf$var$taskInput = document.getElementById("taskInput");
var $aba770e9ce7dbb561d9a46041b248abf$var$dueDateInput = document.getElementById("dueDateInput");
var $aba770e9ce7dbb561d9a46041b248abf$var$completionTimeInput = document.getElementById("completionTimeInput");
var $aba770e9ce7dbb561d9a46041b248abf$var$estimatedTimeInput = document.getElementById("estimatedTimeInput");
var $aba770e9ce7dbb561d9a46041b248abf$var$priorityInput = document.getElementById("priorityInput");
var $aba770e9ce7dbb561d9a46041b248abf$var$tasklist = document.getElementById("tasklistTable");
//kanban
var $aba770e9ce7dbb561d9a46041b248abf$var$boardContainer = document.getElementById("board-container");
var $aba770e9ce7dbb561d9a46041b248abf$var$toDoColumn = document.getElementById("toDoColumn");
var $aba770e9ce7dbb561d9a46041b248abf$var$boardNameInput = document.getElementById("boardNameInput");
const $aba770e9ce7dbb561d9a46041b248abf$var$kanbanBtn = document.getElementById("kanbanBtn");
//stopwatch
//music player
var $aba770e9ce7dbb561d9a46041b248abf$var$musicModal = document.getElementById("musicModal");
var $aba770e9ce7dbb561d9a46041b248abf$var$musicBtn = document.getElementById("musicBtn");
const $aba770e9ce7dbb561d9a46041b248abf$var$musicContainer = document.querySelector('.music-container');
const $aba770e9ce7dbb561d9a46041b248abf$var$prevBtn = document.querySelector('#prevBtn');
const $aba770e9ce7dbb561d9a46041b248abf$var$playBtn = document.querySelector('#playBtn');
const $aba770e9ce7dbb561d9a46041b248abf$var$nextBtn = document.querySelector('#nextBtn');
const $aba770e9ce7dbb561d9a46041b248abf$var$audioTrack = document.querySelector('#audioTrack');
const $aba770e9ce7dbb561d9a46041b248abf$var$progressContainer = document.querySelector('.progress-container');
const $aba770e9ce7dbb561d9a46041b248abf$var$progressBar = document.querySelector('.progress-bar');
const $aba770e9ce7dbb561d9a46041b248abf$var$songTitle = document.getElementById("songTitle");
const $aba770e9ce7dbb561d9a46041b248abf$var$songArtist = document.getElementById("songArtist");
const $aba770e9ce7dbb561d9a46041b248abf$var$songCover = document.getElementById("songCover");
//resource list
var $aba770e9ce7dbb561d9a46041b248abf$var$resourceModal = document.getElementById("resourceModal");
var $aba770e9ce7dbb561d9a46041b248abf$var$addResourceBtn = document.getElementById("addResourceBtn");
///NAVIGATION ---------------------------------------------------
//---------------------------------
const $aba770e9ce7dbb561d9a46041b248abf$var$links = document.querySelectorAll('nav > ul > li > a');
const $aba770e9ce7dbb561d9a46041b248abf$var$pages = document.querySelectorAll('.page-container');
var $aba770e9ce7dbb561d9a46041b248abf$var$nav = new $aba770e9ce7dbb561d9a46041b248abf$import$63577e0e88ebb867$9099ad97b570f7c($aba770e9ce7dbb561d9a46041b248abf$var$links, $aba770e9ce7dbb561d9a46041b248abf$var$pages);
$aba770e9ce7dbb561d9a46041b248abf$var$nav.getLinks();
$aba770e9ce7dbb561d9a46041b248abf$var$nav.links.forEach(function(link) {
    link.addEventListener('click', function() {
        //console.log(nav.getHash(link));
        let pageId = $aba770e9ce7dbb561d9a46041b248abf$var$nav.getHash(link);
        $aba770e9ce7dbb561d9a46041b248abf$var$nav.setPage(pageId);
    });
});
///TASK LIST -------------------------------------------------------
//event listener for when button clicked
//OR button.addEventListener("click", function(event) {
$aba770e9ce7dbb561d9a46041b248abf$var$form.addEventListener("submit", function(event) {
    //make sure none of the browser function will happen automatically
    event.preventDefault();
    //takes the user input
    let task = $aba770e9ce7dbb561d9a46041b248abf$var$taskInput.value;
    let dueDate = $aba770e9ce7dbb561d9a46041b248abf$var$dueDateInput.value;
    let completionTime = $aba770e9ce7dbb561d9a46041b248abf$var$completionTimeInput.value;
    let estimatedTime = $aba770e9ce7dbb561d9a46041b248abf$var$estimatedTimeInput.value;
    let priorityRating = $aba770e9ce7dbb561d9a46041b248abf$var$priorityInput.options[$aba770e9ce7dbb561d9a46041b248abf$var$priorityInput.selectedIndex].value;
    //add it as a task using addTask function
    $aba770e9ce7dbb561d9a46041b248abf$var$addTask(task, dueDate, completionTime, estimatedTime, priorityRating, false);
    //console out for debugging
    console.log($aba770e9ce7dbb561d9a46041b248abf$var$taskListArray);
});
//empty array to store tasks
var $aba770e9ce7dbb561d9a46041b248abf$var$taskListArray = [];
//The function creates the object & pushes it to an array 
function $aba770e9ce7dbb561d9a46041b248abf$var$addTask(taskDescription, dueDate, completionTime, estimatedTime, priorityRating, completionStatus) {
    let d = new Date();
    let dateCreated = d.getFullYear();
    let task = {
        taskDescription: taskDescription,
        dueDate: dueDate,
        dateCreated: dateCreated,
        completionTime: completionTime,
        estimatedTime: estimatedTime,
        priorityRating: priorityRating,
        completionStatus: completionStatus
    };
    //add the task to the array
    $aba770e9ce7dbb561d9a46041b248abf$var$taskListArray.push(task);
    ///return task;
    $aba770e9ce7dbb561d9a46041b248abf$var$renderTask(task);
    //calling function for kanban board
    $aba770e9ce7dbb561d9a46041b248abf$var$renderKanban(task);
}
//ADD the task to the screen via HTML
//pulling the task as a complete object rather than individual parts
function $aba770e9ce7dbb561d9a46041b248abf$var$renderTask(task) {
    //create html elements
    let item = document.createElement("tr");
    item.setAttribute("class", "newTaskItem");
    let cell1 = document.createElement("td");
    cell1.innerHTML += "<label for=taskCheckbox><input type=checkbox name=taskCheckbox class=taskCheckboxInput><strong>" + task.taskDescription + "</strong>" + "</label>";
    let cell2 = document.createElement("td");
    cell2.innerHTML += "<p>" + task.dueDate + "</p>";
    let cell3 = document.createElement("td");
    cell3.innerHTML += "<p>" + task.completionTime + "</p>";
    let cell4 = document.createElement("td");
    cell4.innerHTML += "<p>" + task.estimatedTime + ' ' + 'min' + "</p>";
    let cell5 = document.createElement("td");
    cell5.innerHTML += "<p>" + task.priorityRating + "</p>";
    let cell6 = document.createElement("td");
    item.append(cell1, cell2, cell3, cell4, cell5, cell6);
    tasklistTable.appendChild(item);
    //Extra task DOM elements - further user interaction e.g delete
    let delButton = document.createElement("button");
    //create a textNode
    let delButtonText = document.createTextNode("Delete");
    //get the text appended to button element
    delButton.appendChild(delButtonText);
    //append whole button to the item created
    cell6.appendChild(delButton);
    //Event Listeners for DOM elements
    delButton.addEventListener("click", function(event) {
        event.preventDefault();
        item.remove();
    });
    //Clear the input form
    $aba770e9ce7dbb561d9a46041b248abf$var$form.reset();
    //Setting the style colours depending on priority rating
    var newTaskItem = document.getElementsByClassName("newTaskItem");
    var taskCheckboxInput = document.getElementsByClassName("taskCheckboxInput");
    //Iteration: changed the colours to appropriately correlate with the priority (pink = high, blue = low)
    if (task.priorityRating === "Low") {
        newTaskItem[newTaskItem.length - 1].style.backgroundColor = "#E2EDF7";
        taskCheckboxInput[taskCheckboxInput.length - 1].style.border = "solid #8CB7F2";
    //taskCheckboxInput.addEventListener("click", function(event){
    //askCheckboxInput.style.backgroundColor = "solid #F7D7E7";
    } else if (task.priorityRating === "Medium") {
        newTaskItem[newTaskItem.length - 1].style.backgroundColor = "#FCF4DD";
        taskCheckboxInput[taskCheckboxInput.length - 1].style.border = "solid #F7D382";
    } else if (task.priorityRating === "High") {
        newTaskItem[newTaskItem.length - 1].style.backgroundColor = "#F7D7E7";
        taskCheckboxInput[taskCheckboxInput.length - 1].style.border = "solid #EAA0D3";
    }
}
///KANBAN BOARD ---------------------------------------------------------
var $aba770e9ce7dbb561d9a46041b248abf$var$cardItems = document.getElementById("kanbanCard");
const $aba770e9ce7dbb561d9a46041b248abf$var$boardColumn = document.querySelectorAll('.boardColumn');
var $aba770e9ce7dbb561d9a46041b248abf$var$cardArray = [];
//render kanban board 
function $aba770e9ce7dbb561d9a46041b248abf$var$renderKanbanBoard(boardName) {
    let board = document.createElement("div");
    board.setAttribute("class", "boardColumn");
    board.innerHTML += "<h4>" + boardName + "</h4>";
    //append the board to the container
    $aba770e9ce7dbb561d9a46041b248abf$var$boardContainer.appendChild(board);
}
//render kanban card
function $aba770e9ce7dbb561d9a46041b248abf$var$renderKanban(task) {
    let card = document.createElement("div");
    card.setAttribute("id", "kanbanCard");
    card.setAttribute("draggable", "true");
    card.innerHTML = "<div class = kanbanPriority><p>" + task.priorityRating + "</p>" + "<div>";
    card.innerHTML += "<h4>" + task.taskDescription + "</h4>";
    card.innerHTML += "<p><strong>" + task.dueDate + "<strong>" + "</p>";
    card.innerHTML += "<p>" + task.completionTime + "</p>";
    $aba770e9ce7dbb561d9a46041b248abf$var$cardArray.push(card);
    //append the card to the To-Do Board 
    $aba770e9ce7dbb561d9a46041b248abf$var$toDoColumn.appendChild(card);
}
//add a new board when user submits the form
$aba770e9ce7dbb561d9a46041b248abf$var$kanbanBtn.addEventListener("click", function(event) {
    let boardName = $aba770e9ce7dbb561d9a46041b248abf$var$boardNameInput.value;
    $aba770e9ce7dbb561d9a46041b248abf$var$renderKanbanBoard(boardName);
});
//DRAG AND DROP functionality
let $aba770e9ce7dbb561d9a46041b248abf$var$draggedItem = null;
/*or (var i of cardItems){
  i.addEventListener('dragstart', dragStart);
}

function dragStart() {
  console.log('dragstart');
  draggedItem  = i;
  setTimeout(function(){
    i.style.display = 'none';
  }, 0)
}*/ /*for (let i = 0; i < cardArray.length; i++){
  const cardItem = cardArray[i];*/ $aba770e9ce7dbb561d9a46041b248abf$var$cardItems.addEventListener('dragstart', function() {
    console.log('dragstart');
    $aba770e9ce7dbb561d9a46041b248abf$var$draggedItem = $aba770e9ce7dbb561d9a46041b248abf$var$cardItems;
    setTimeout(function() {
        $aba770e9ce7dbb561d9a46041b248abf$var$cardItems.style.display = 'none';
    }, 0);
});
/*cardItem.addEventListener('dragend', function(){
    console.log('dragend');
    setTimeout(function(){
      draggedItem.style.display = 'block';
      draggedItem = null;
    }, 0);
  })*/ //}
///STOPWATCH ----------------------------------------------------
const $aba770e9ce7dbb561d9a46041b248abf$var$startCounterButton = document.getElementById("startCounter");
const $aba770e9ce7dbb561d9a46041b248abf$var$stopCounterButton = document.getElementById("stopCounter");
const $aba770e9ce7dbb561d9a46041b248abf$var$resetCounterButton = document.getElementById("resetCounter");
const $aba770e9ce7dbb561d9a46041b248abf$var$selectStudyTypeInput = document.getElementById("studyTypeInput");
let $aba770e9ce7dbb561d9a46041b248abf$var$timePassed = 0;
let $aba770e9ce7dbb561d9a46041b248abf$var$timerInterval = null;
let $aba770e9ce7dbb561d9a46041b248abf$var$vocab = 0;
let $aba770e9ce7dbb561d9a46041b248abf$var$textbook = 0;
let $aba770e9ce7dbb561d9a46041b248abf$var$reading = 0;
var $aba770e9ce7dbb561d9a46041b248abf$var$stopwatch = document.getElementById("counter");
var $aba770e9ce7dbb561d9a46041b248abf$var$vocabTimer = document.getElementById("vocabTimer");
var $aba770e9ce7dbb561d9a46041b248abf$var$textbookTimer = document.getElementById("textbookTimer");
var $aba770e9ce7dbb561d9a46041b248abf$var$readingTimer = document.getElementById("readingTimer");
//get data from local storage
let $aba770e9ce7dbb561d9a46041b248abf$var$timerCounter = JSON.parse(window.localStorage.getItem('timerData'));
// Initialisation of main stopwatch display
$aba770e9ce7dbb561d9a46041b248abf$var$stopwatch.innerHTML = `\n<div>\n  ${$aba770e9ce7dbb561d9a46041b248abf$var$formatTime($aba770e9ce7dbb561d9a46041b248abf$var$timePassed)}\n</div>\n`;
// Initialisation of display in table format
$aba770e9ce7dbb561d9a46041b248abf$var$vocabTimer.innerHTML = `\n<div>\n  ${$aba770e9ce7dbb561d9a46041b248abf$var$formatTime($aba770e9ce7dbb561d9a46041b248abf$var$timerCounter["Vocab"])}\n</div>\n`;
$aba770e9ce7dbb561d9a46041b248abf$var$textbookTimer.innerHTML = `\n<div>\n  ${$aba770e9ce7dbb561d9a46041b248abf$var$formatTime($aba770e9ce7dbb561d9a46041b248abf$var$timerCounter["Textbook"])}\n</div>\n`;
$aba770e9ce7dbb561d9a46041b248abf$var$readingTimer.innerHTML = `\n<div>\n  ${$aba770e9ce7dbb561d9a46041b248abf$var$formatTime($aba770e9ce7dbb561d9a46041b248abf$var$timerCounter["Reading"])}\n</div>\n`;
//input: time integer
//output: formatted time
function $aba770e9ce7dbb561d9a46041b248abf$var$formatTime(time) {
    let hour = Math.floor(time / 3600);
    let minutes = Math.floor(time / 60 - hour * 60);
    let seconds = Math.floor(time % 60);
    if (seconds < 10) seconds = `0${seconds}`;
    if (minutes < 10) minutes = `0${minutes}`;
    if (hour < 10) hour = `0${hour}`;
    return `${hour}:${minutes}:${seconds}`;
}
//Start timer iterates every second and increases variable time passed by 1
function $aba770e9ce7dbb561d9a46041b248abf$var$startTimer() {
    $aba770e9ce7dbb561d9a46041b248abf$var$timerInterval = setInterval(()=>{
        $aba770e9ce7dbb561d9a46041b248abf$var$timePassed += 1;
        document.getElementById("counter").innerHTML = $aba770e9ce7dbb561d9a46041b248abf$var$formatTime($aba770e9ce7dbb561d9a46041b248abf$var$timePassed);
        if ($aba770e9ce7dbb561d9a46041b248abf$var$selectStudyTypeInput.value == "Vocab") $aba770e9ce7dbb561d9a46041b248abf$var$vocab += 1;
        else if ($aba770e9ce7dbb561d9a46041b248abf$var$selectStudyTypeInput.value == "Textbook") $aba770e9ce7dbb561d9a46041b248abf$var$textbook += 1;
        else if ($aba770e9ce7dbb561d9a46041b248abf$var$selectStudyTypeInput.value == "Reading") $aba770e9ce7dbb561d9a46041b248abf$var$reading += 1;
    }, 1000);
}
$aba770e9ce7dbb561d9a46041b248abf$var$startCounterButton.addEventListener("click", function(event) {
    $aba770e9ce7dbb561d9a46041b248abf$var$startCounterButton.disabled = true;
    $aba770e9ce7dbb561d9a46041b248abf$var$startTimer();
    //record the start time in flow time tracker
    $aba770e9ce7dbb561d9a46041b248abf$var$formatFlowTime();
});
//  stop button should re-render all latest updates form local storage and stop timer and update local storage
$aba770e9ce7dbb561d9a46041b248abf$var$stopCounterButton.addEventListener("click", (e)=>{
    clearInterval($aba770e9ce7dbb561d9a46041b248abf$var$timerInterval);
    $aba770e9ce7dbb561d9a46041b248abf$var$startCounterButton.disabled = false;
    //local storage
    const timerData = {
        Vocab: $aba770e9ce7dbb561d9a46041b248abf$var$vocab,
        Textbook: $aba770e9ce7dbb561d9a46041b248abf$var$textbook,
        Reading: $aba770e9ce7dbb561d9a46041b248abf$var$reading
    };
    window.localStorage.setItem('timerData', JSON.stringify(timerData));
    document.getElementById("vocabTimer").innerHTML = $aba770e9ce7dbb561d9a46041b248abf$var$formatTime(timerData["Vocab"]);
    document.getElementById("textbookTimer").innerHTML = $aba770e9ce7dbb561d9a46041b248abf$var$formatTime(timerData["Textbook"]);
    document.getElementById("readingTimer").innerHTML = $aba770e9ce7dbb561d9a46041b248abf$var$formatTime(timerData["Reading"]);
});
$aba770e9ce7dbb561d9a46041b248abf$var$resetCounterButton.addEventListener("click", (e)=>{
    $aba770e9ce7dbb561d9a46041b248abf$var$timePassed = 0;
    clearInterval($aba770e9ce7dbb561d9a46041b248abf$var$timerInterval);
    document.getElementById("counter").innerHTML = $aba770e9ce7dbb561d9a46041b248abf$var$formatTime($aba770e9ce7dbb561d9a46041b248abf$var$timePassed);
    $aba770e9ce7dbb561d9a46041b248abf$var$startCounterButton.disabled = false;
});
///FLOW TIME TRACKER --------------------------------------------------
//user adds own study type
//Show today's date
var $aba770e9ce7dbb561d9a46041b248abf$var$todayDate = document.getElementById("todayDate");
$aba770e9ce7dbb561d9a46041b248abf$var$todayDate.innerHTML = $aba770e9ce7dbb561d9a46041b248abf$var$formatDate(new Date());
function $aba770e9ce7dbb561d9a46041b248abf$var$formatDate(date) {
    var months = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
    ];
    var day = date.getDate();
    var monthIndex = date.getMonth();
    var year = date.getFullYear();
    return "<strong>Today: " + day + ' ' + months[monthIndex] + ' ' + year + '</strong>';
}
//get current time
var $aba770e9ce7dbb561d9a46041b248abf$var$currentTime = document.getElementById("currentTime");
var $aba770e9ce7dbb561d9a46041b248abf$var$vocabFlowTime = document.getElementById("vocabFlowTime");
var $aba770e9ce7dbb561d9a46041b248abf$var$textbookFlowTime = document.getElementById("textbookFlowTime");
var $aba770e9ce7dbb561d9a46041b248abf$var$readingFlowTime = document.getElementById("readingFlowTime");
var $aba770e9ce7dbb561d9a46041b248abf$var$timeIndex = 0;
function $aba770e9ce7dbb561d9a46041b248abf$var$formatFlowTime() {
    var today = new Date();
    //var time = today.getHours() + ":" + today.getMinutes();
    var time;
    if (today.getMinutes() < 10) time = today.getHours() + ":0" + today.getMinutes();
    else if (today.getMinutes() >= 10) time = today.getHours() + ":" + today.getMinutes();
    //store to local storage using key/value
    let key = "time" + ($aba770e9ce7dbb561d9a46041b248abf$var$timeIndex + 1).toString();
    $aba770e9ce7dbb561d9a46041b248abf$var$timeIndex = $aba770e9ce7dbb561d9a46041b248abf$var$timeIndex + 1;
    window.localStorage.setItem(key, JSON.stringify(time));
    //get from local storage
    let timeData = JSON.parse(window.localStorage.getItem(key));
    if ($aba770e9ce7dbb561d9a46041b248abf$var$selectStudyTypeInput.value == "Vocab") {
        var vocabStartTime = document.createElement("tr");
        vocabStartTime.innerHTML = "<p>" + timeData + "</p>";
        $aba770e9ce7dbb561d9a46041b248abf$var$vocabFlowTime.appendChild(vocabStartTime);
    } else if ($aba770e9ce7dbb561d9a46041b248abf$var$selectStudyTypeInput.value == "Textbook") {
        var textbookStartTime = document.createElement("tr");
        textbookStartTime.innerHTML = "<p>" + timeData + "</p>";
        $aba770e9ce7dbb561d9a46041b248abf$var$textbookFlowTime.appendChild(textbookStartTime);
    } else if ($aba770e9ce7dbb561d9a46041b248abf$var$selectStudyTypeInput.value == "Reading") {
        var readingStartTime = document.createElement("tr");
        readingStartTime.innerHTML = "<p>" + timeData + "</p>";
        $aba770e9ce7dbb561d9a46041b248abf$var$readingFlowTime.appendChild(readingStartTime);
    }
}
//currentTime.innerHTML = "<div>" + timeData + "</div>"
//delete button
///MUSIC PLAYER ---------------------------------------------------
// When the user clicks on the button, open the modal
$aba770e9ce7dbb561d9a46041b248abf$var$musicBtn.onclick = function() {
    $aba770e9ce7dbb561d9a46041b248abf$var$musicModal.style.display = "block";
};
//APPLIES TO MUSIC PLAYER AND RESOURCE LIST
// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == $aba770e9ce7dbb561d9a46041b248abf$var$musicModal) $aba770e9ce7dbb561d9a46041b248abf$var$musicModal.style.display = "none";
    else if (event.target == $aba770e9ce7dbb561d9a46041b248abf$var$resourceModal) $aba770e9ce7dbb561d9a46041b248abf$var$resourceModal.style.display = "none";
};
//Song titles
//source
//https://www.youtube.com/watch?v=l1-MURE3kfc&ab_channel=BgHBeatsBgHBeats
//https://www.youtube.com/watch?v=t9r4cHSnjq4&ab_channel=LuKremBoLuKremBo
//https://www.youtube.com/watch?v=r6-8FEYuEYg&ab_channel=ZeekyBeatsZeekyBeats
const $aba770e9ce7dbb561d9a46041b248abf$var$songs = [
    'Imagine',
    'Bored',
    'Fresh Air',
    'Rose'
];
const $aba770e9ce7dbb561d9a46041b248abf$var$artists = [
    'BgH Beats',
    'LuKremBo',
    'Zeeky Beats',
    'LuKremBo'
];
let $aba770e9ce7dbb561d9a46041b248abf$var$songIndex = 1;
let $aba770e9ce7dbb561d9a46041b248abf$var$artistIndex = 1;
//load song into DOM
$aba770e9ce7dbb561d9a46041b248abf$var$loadSong($aba770e9ce7dbb561d9a46041b248abf$var$songs[$aba770e9ce7dbb561d9a46041b248abf$var$songIndex], $aba770e9ce7dbb561d9a46041b248abf$var$artists[$aba770e9ce7dbb561d9a46041b248abf$var$artistIndex]);
//Function: update song details (title, artist, audio, cover img)
function $aba770e9ce7dbb561d9a46041b248abf$var$loadSong(song, artist) {
    $aba770e9ce7dbb561d9a46041b248abf$var$songTitle.innerText = song;
    $aba770e9ce7dbb561d9a46041b248abf$var$songArtist.innerText = artist;
    $aba770e9ce7dbb561d9a46041b248abf$var$audioTrack.src = `music/${song}.mp3`;
    $aba770e9ce7dbb561d9a46041b248abf$var$songCover.src = `images/${song}.jpg`;
}
function $aba770e9ce7dbb561d9a46041b248abf$var$playSong() {
    $aba770e9ce7dbb561d9a46041b248abf$var$musicContainer.classList.add('play');
    $aba770e9ce7dbb561d9a46041b248abf$var$playBtn.querySelector('i.fas').classList.remove('fa-play');
    $aba770e9ce7dbb561d9a46041b248abf$var$playBtn.querySelector('i.fas').classList.add('fa-pause');
    $aba770e9ce7dbb561d9a46041b248abf$var$audioTrack.play();
}
function $aba770e9ce7dbb561d9a46041b248abf$var$pauseSong() {
    $aba770e9ce7dbb561d9a46041b248abf$var$musicContainer.classList.remove('play');
    $aba770e9ce7dbb561d9a46041b248abf$var$playBtn.querySelector('i.fas').classList.remove('fa-pause');
    $aba770e9ce7dbb561d9a46041b248abf$var$playBtn.querySelector('i.fas').classList.add('fa-play');
    $aba770e9ce7dbb561d9a46041b248abf$var$audioTrack.pause();
}
function $aba770e9ce7dbb561d9a46041b248abf$var$prevSong() {
    $aba770e9ce7dbb561d9a46041b248abf$var$songIndex--;
    $aba770e9ce7dbb561d9a46041b248abf$var$artistIndex--;
    if ($aba770e9ce7dbb561d9a46041b248abf$var$songIndex < 0) $aba770e9ce7dbb561d9a46041b248abf$var$songIndex = $aba770e9ce7dbb561d9a46041b248abf$var$songs.length - 1;
    if ($aba770e9ce7dbb561d9a46041b248abf$var$artistIndex < 0) $aba770e9ce7dbb561d9a46041b248abf$var$artistIndex = $aba770e9ce7dbb561d9a46041b248abf$var$artists.length - 1;
    $aba770e9ce7dbb561d9a46041b248abf$var$loadSong($aba770e9ce7dbb561d9a46041b248abf$var$songs[$aba770e9ce7dbb561d9a46041b248abf$var$songIndex], $aba770e9ce7dbb561d9a46041b248abf$var$artists[$aba770e9ce7dbb561d9a46041b248abf$var$artistIndex]);
    $aba770e9ce7dbb561d9a46041b248abf$var$playSong();
}
function $aba770e9ce7dbb561d9a46041b248abf$var$nextSong() {
    $aba770e9ce7dbb561d9a46041b248abf$var$songIndex++;
    $aba770e9ce7dbb561d9a46041b248abf$var$artistIndex++;
    if ($aba770e9ce7dbb561d9a46041b248abf$var$songIndex > $aba770e9ce7dbb561d9a46041b248abf$var$songs.length - 1) $aba770e9ce7dbb561d9a46041b248abf$var$songIndex = 0;
    if ($aba770e9ce7dbb561d9a46041b248abf$var$artistIndex > $aba770e9ce7dbb561d9a46041b248abf$var$artists.length - 1) $aba770e9ce7dbb561d9a46041b248abf$var$artistIndex = 0;
    $aba770e9ce7dbb561d9a46041b248abf$var$loadSong($aba770e9ce7dbb561d9a46041b248abf$var$songs[$aba770e9ce7dbb561d9a46041b248abf$var$songIndex], $aba770e9ce7dbb561d9a46041b248abf$var$artists[$aba770e9ce7dbb561d9a46041b248abf$var$artistIndex]);
    $aba770e9ce7dbb561d9a46041b248abf$var$playSong();
}
//update the progress bar as song plays
function $aba770e9ce7dbb561d9a46041b248abf$var$updateProgress(e) {
    //console.log(e.srcElement.currentTime)
    const { duration: duration , currentTime: currentTime  } = e.srcElement;
    const progressPercent = currentTime / duration * 100;
    $aba770e9ce7dbb561d9a46041b248abf$var$progressBar.style.width = `${progressPercent}%`;
}
//when users click on progress bar, jumps to that part of song
function $aba770e9ce7dbb561d9a46041b248abf$var$setProgress(e) {
    const width = this.clientWidth;
    const clickX = e.offsetX;
    const duration = $aba770e9ce7dbb561d9a46041b248abf$var$audioTrack.duration;
    $aba770e9ce7dbb561d9a46041b248abf$var$audioTrack.currentTime = clickX / width * duration;
}
//event listeners
$aba770e9ce7dbb561d9a46041b248abf$var$playBtn.addEventListener('click', ()=>{
    const isPlaying = $aba770e9ce7dbb561d9a46041b248abf$var$musicContainer.classList.contains('play');
    if (isPlaying) $aba770e9ce7dbb561d9a46041b248abf$var$pauseSong();
    else $aba770e9ce7dbb561d9a46041b248abf$var$playSong();
});
//Change songs 
$aba770e9ce7dbb561d9a46041b248abf$var$prevBtn.addEventListener('click', $aba770e9ce7dbb561d9a46041b248abf$var$prevSong);
$aba770e9ce7dbb561d9a46041b248abf$var$nextBtn.addEventListener('click', $aba770e9ce7dbb561d9a46041b248abf$var$nextSong);
$aba770e9ce7dbb561d9a46041b248abf$var$audioTrack.addEventListener('timeupdate', $aba770e9ce7dbb561d9a46041b248abf$var$updateProgress);
$aba770e9ce7dbb561d9a46041b248abf$var$progressContainer.addEventListener('click', $aba770e9ce7dbb561d9a46041b248abf$var$setProgress);
$aba770e9ce7dbb561d9a46041b248abf$var$audioTrack.addEventListener('ended', $aba770e9ce7dbb561d9a46041b248abf$var$nextSong);
///RESOURCE LIST ---------------------------------------------------
//open modal
$aba770e9ce7dbb561d9a46041b248abf$var$addResourceBtn.onclick = function() {
    $aba770e9ce7dbb561d9a46041b248abf$var$resourceModal.style.display = "block";
}; // close modal
